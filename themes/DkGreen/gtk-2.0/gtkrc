# Original theme by OriginalSeed, this is a modified version by Heriberto Alor

include "panel.rc"
include "windowbg.rc"
gtk-color-scheme = "base_color:#202020\nfg_color:#fafafa\ntooltip_fg_color:#ffffff\nselected_bg_color:#3E8753\nselected_fg_color:#FFFFFF\ntext_color:#fafafa\nbg_color:#121212\ntooltip_bg_color:#000000\nlink_color:#6A9C6B"

gtk-icon-sizes = "panel-menu=22,22:gtk-button=16,16"

gtk-auto-mnemonics = 1

style "default" {
	xthickness = 1
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkWidget::interior_focus			= 7
GtkWidget::focus_padding			= 1
GtkButton::default_border			= {0,0,0,0}
GtkButton::default_outside_border	= {0,0,0,0}

GtkRange::trough_border			= 1
GtkRange::slider_width			= 14
GtkRange::stepper_size			= 14

GtkVScale::slider_length 			= 29
GtkVScale::slider_width 			= 15
GtkHScale::slider_length 			= 29
GtkHScale::slider_width 			= 15

GtkPaned::handle_size			= 6
GtkScrollbar::min_slider_length		= 50
GtkCheckButton::indicator_size		= 12
GtkCheckButton::indicator_spacing	= 3
GtkMenuBar::internal_padding		= 1
#GtkOptionMenu::indicator_size		= {15,8}
#GtkOptionMenu::indicator_spacing	= {8,2,0,0}
GtkStatusbar::shadow_type 		= GTK_SHADOW_NONE
GtkSpinButton::shadow_type 		= GTK_SHADOW_NONE

WnckTasklist::fade-overlay-rect = 1
WnckTasklist::fade-loop-time = 2.0 # 2 seconds
WnckTasklist::fade-opacity = 0.9 # final opacity
WnckTasklist::fade-max-loops = 50 #fade to the final color

	GtkWidget::link-color = @link_color
	GtkWidget::visited-link-color = @text_color

	####################
	# Color Definitions
	####################
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = shade (0.95, @bg_color)
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = shade (0.25,@fg_color)
	fg[ACTIVE]        = @fg_color

        text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = shade (0.25, @text_color)
	text[ACTIVE]      = darker (@text_color)

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.98, @base_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = shade (0.97, @base_color)
	base[ACTIVE]      = @selected_bg_color

engine "pixmap"
{
image
{
function		= HANDLE
overlay_file	= "Handles/handle-h.png"
overlay_stretch	= FALSE
orientation	= HORIZONTAL
}
image
{
function		= HANDLE
overlay_file	= "Handles/handle-v.png"
overlay_stretch	= FALSE
orientation	= VERTICAL
}

image
{
function	= SHADOW
shadow	= IN
file		= "Shadows/shadow-in.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= SHADOW
shadow	= OUT
file		= "Shadows/shadow-out.png"
stretch	= TRUE
}

image
{
function	= SHADOW
shadow	= ETCHED_IN
file		= "Others/frame.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= SHADOW
shadow	= ETCHED_OUT
file		= "Others/null.png"
border	= {0,0,0,0}
stretch	= TRUE
}
image
{
function			= SHADOW_GAP
file				= "Others/frame.png"
border			= {2,2,2,2}
stretch			= TRUE
gap_start_file		= "Others/frame-gap-start.png"
gap_start_border	= {2,0,2,0}
gap_end_file		= "Others/frame-gap-end.png"
gap_end_border	= {0,2,2,0}
gap_side			= TOP
}

image
{
function		= ARROW
overlay_file	= "Arrows/arrow-up.png"
overlay_border	= {0,0,0,0}
overlay_stretch	= FALSE
arrow_direction	= UP
}
image
{
function		= ARROW
overlay_file	= "Arrows/arrow-down.png"
overlay_border	= {0,0,0,0}
overlay_stretch	= FALSE
arrow_direction	= DOWN
}
image
{
function		= ARROW
overlay_file	= "Arrows/arrow-left.png"
overlay_border	= {0,0,0,0}
overlay_stretch	= FALSE
arrow_direction	= LEFT
}
image
{
function		= ARROW
overlay_file	= "Arrows/arrow-right.png"
overlay_border	= {0,0,0,0}
overlay_stretch	= FALSE
arrow_direction	= RIGHT
}
image
{
function	= BOX
file		= "Toolbar/toolbar.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}	

}



style "wide" {
	xthickness = 2
	ythickness = 2
}

style "wider" {
	xthickness = 3
	ythickness = 3
}

style "entry" = "default" {

        #the border is disabled 
	xthickness = 3
	ythickness = 3


        base[NORMAL] = @base_color
        fg[NORMAL]= @fg_color
        text[NORMAL]= @fg_color

	engine "pixmap" {
		image
		{
			state           = NORMAL
			function	= FLAT_BOX
			file		= "entry/bg-entry.png"
			border          = {0, 0, 0, 0}
			stretch		= TRUE
		}
		image
		{
			state           = INSENSITIVE
			function	= FLAT_BOX
		}
		image
		{
			#state           = NORMAL
			function	= FLAT_BOX
			file		= "entry/bg-entry.png"
			border          = {2, 2, 2, 2}
			stretch		= TRUE
			overlay_file	= "entry/border-entry.png"
			overlay_border	= {0, 0, 0, 0}
			overlay_stretch	= TRUE
		}

	}
}

widget	"MozillaGtkWidget.GtkFixed.GtkEntry"	style	"entry"

style "button" = "default"{
	xthickness = 3
	ythickness = 3

	fg[INSENSITIVE] = "#9c9c9c"

	engine "pixmap"
{
image
{
function	= BOX
detail	= "buttondefault"
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= PRELIGHT
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= ACTIVE
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= INSENSITIVE
file		= "Buttons/button-insensitive.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}

}

style "notebook_button" = "default"{

	xthickness = 3
	ythickness = 3

		engine "pixmap"
{
image
{
function	= BOX
detail	= "buttondefault"
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= PRELIGHT
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= ACTIVE
file		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
state		= INSENSITIVE
file		= "Buttons/button-insensitive.png"
border	= {2,2,2,2}
stretch	= TRUE
}
image
{
function	= BOX
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}

}

style "spinbutton" {
	xthickness = 4
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = shade (0.95, @bg_color)
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = @bg_color
	fg[ACTIVE]        = @fg_color



        text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = "#020202"
	text[ACTIVE]      = darker (@text_color)

        base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.98, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = shade (0.97, @bg_color)
	base[ACTIVE]      = @selected_bg_color



engine "murrine"
{


}
}

style "scrollbar" = "button" {
	xthickness = 2
	ythickness = 2


engine "pixmap"
{

image
{
function	= BOX
detail	= "trough"
file		= "Scrollbars/trough-scrollbar-horiz.png"
border	= {16,16,2,2}
stretch	= TRUE
orientation = HORIZONTAL
}
image
{
function	= BOX
detail	= "trough"
file		= "Scrollbars/trough-scrollbar-vert.png"
border	= {2,2,16,16}
stretch	= TRUE
orientation = VERTICAL
}


image
{
function		= SLIDER
state 		= NORMAL
file			= "Scrollbars/slider-horiz.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= HORIZONTAL
orientation	= HORIZONTAL
}
image
{
function		= SLIDER
state 		= ACTIVE
shadow		= IN
file			= "Scrollbars/slider-horiz-active.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= HORIZONTAL
orientation	= HORIZONTAL
}
image
{
function		= SLIDER
state 		= PRELIGHT
file			= "Scrollbars/slider-horiz-active.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= HORIZONTAL
orientation	= HORIZONTAL
}
image
{
function		= SLIDER
state 		= INSENSITIVE
file			= "Scrollbars/slider-horiz.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= HORIZONTAL
}


image
{
function		= SLIDER
state 		= NORMAL
file			= "Scrollbars/slider-vert.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= VERTICAL
orientation	= VERTICAL
}
image
{
function		= SLIDER
state 		= ACTIVE
shadow		= IN
file			= "Scrollbars/slider-vert.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= VERTICAL
orientation	= VERTICAL
}
image
{
function		= SLIDER
state 		= PRELIGHT
file			= "Scrollbars/slider-vert-active.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= VERTICAL
orientation	= VERTICAL
}
image
{
function		= SLIDER
state 		= INSENSITIVE
file			= "Scrollbars/slider-vert.png"
border		= {2,2,2,2}
stretch		= TRUE
orientation	= VERTICAL
}

image
{
function		= STEPPER
state			= NORMAL
file			= "Scrollbars/stepper-up.png"
stretch		= TRUE
arrow_direction	= UP
}
image
{
function		= STEPPER
state			= PRELIGHT
file			= "Scrollbars/stepper-up-prelight.png"
stretch		= TRUE
arrow_direction	= UP
}
image
{
function		= STEPPER
state			= ACTIVE
file			= "Scrollbars/stepper-up-prelight.png"
stretch		= TRUE
arrow_direction	= UP
}
image
{
function		= STEPPER
state			= INSENSITIVE
file			= "Scrollbars/stepper-up.png"
stretch		= TRUE
arrow_direction	= UP
}


image
{
function		= STEPPER
state			= NORMAL
file			= "Scrollbars/stepper-down.png"
stretch		= TRUE
arrow_direction	= DOWN
}
image
{
function		= STEPPER
state			= PRELIGHT
file			= "Scrollbars/stepper-down-prelight.png"
stretch		= TRUE
arrow_direction	= DOWN
}
image
{
function		= STEPPER
state			= ACTIVE
file			= "Scrollbars/stepper-down-prelight.png"
stretch		= TRUE
arrow_direction	= DOWN
}
image
{
function		= STEPPER
state			= INSENSITIVE
file			= "Scrollbars/stepper-down.png"
stretch		= TRUE
arrow_direction	= DOWN
}

image
{
function		= STEPPER
state			= NORMAL
file			= "Scrollbars/stepper-right.png"
stretch		= TRUE
arrow_direction	= RIGHT
}
image
{
function		= STEPPER
state			= PRELIGHT
file			= "Scrollbars/stepper-right-prelight.png"
stretch		= TRUE
arrow_direction	= RIGHT
}
image
{
function		= STEPPER
state			= ACTIVE
file			= "Scrollbars/stepper-right-prelight.png"
stretch		= TRUE
arrow_direction	= RIGHT
}
image
{
function		= STEPPER
state			= INSENSITIVE
file			= "Scrollbars/stepper-right.png"
stretch		= TRUE
arrow_direction	= RIGHT
}

image
{
function		= STEPPER
state			= NORMAL
file			= "Scrollbars/stepper-left.png"
stretch		= TRUE
arrow_direction	= LEFT
}
image
{
function		= STEPPER
state			= PRELIGHT
file			= "Scrollbars/stepper-left-prelight.png"
stretch		= TRUE
arrow_direction	= LEFT
}
image
{
function		= STEPPER
state			= ACTIVE
file			= "Scrollbars/stepper-left-prelight.png"
stretch		= TRUE
arrow_direction	= LEFT
}
image
{
function		= STEPPER
state			= INSENSITIVE
file			= "Scrollbars/stepper-left.png"
stretch		= TRUE
arrow_direction	= LEFT
}
}
}



style "hscrollbar" = "default" {
}

style "vscrollbar" = "default" {
}

style "overlay_scrollbar" = "default"
{

}

style "scale" = "button" {
engine "pixmap"
{
image
{
function		= BOX
detail		= "trough"
file			= "Range/trough-horizontal.png"
border		= {2,2,8,7}
stretch		= TRUE
orientation	= HORIZONTAL
}
image
{
function		= BOX
detail		= "trough"
file			= "Range/trough-vertical.png"
border		= {7,8,2,2}
stretch		= TRUE
orientation	= VERTICAL
}

image
{
function		= SLIDER
state 		= NORMAL
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-horiz.png"
overlay_stretch	= FALSE
orientation	= HORIZONTAL
}
image
{
function		= SLIDER
state 		= PRELIGHT
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-horiz-prelight.png"
overlay_stretch	= FALSE
orientation	= HORIZONTAL
}
image
{
function		= SLIDER
state 		= INSENSITIVE
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-horiz.png"
overlay_stretch	= FALSE
orientation	= HORIZONTAL
}

image
{
function		= SLIDER
state 		= NORMAL
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-vert.png"
overlay_stretch	= FALSE
orientation	= VERTICAL
}
image
{
function		= SLIDER
state 		= PRELIGHT
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-vert-prelight.png"
overlay_stretch	= FALSE
orientation	= VERTICAL
}
image
{
function		= SLIDER
state 		= INSENSITIVE
file			= "Others/null.png"
border		= {0,0,0,0}
stretch		= TRUE
overlay_file	= "Range/slider-vert.png"
overlay_stretch	= FALSE
orientation	= VERTICAL
}
}
}
style "notebook_bg" = "default" {
	base[NORMAL]      = darker(@base_color)
	bg[NORMAL]        = darker(@bg_color)
        engine "pixmap"{}

}

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style "notebook" = "default" {

	xthickness = 2
	ythickness = 2

xthickness = 2
ythickness = 2
engine "pixmap"
{
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-bottom.png"
border	= {3,3,1,4}
stretch	= TRUE
gap_side	= TOP
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-top.png"
border	= {3,3,4,1}
stretch	= TRUE
gap_side	= BOTTOM
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-left.png"
border	= {4,1,3,3}
stretch	= TRUE
gap_side	= RIGHT
}
image
{
function	= EXTENSION
state		= ACTIVE
file		= "Tabs/tab-right.png"
border	= {1,4,3,3}
stretch	= TRUE
gap_side	= LEFT
}
image
{
function	= EXTENSION
file		= "Tabs/tab-top-active.png"
border	= {3,3,3,1}
stretch	= TRUE
gap_side	= BOTTOM
}
image
{
function	= EXTENSION
file		= "Tabs/tab-bottom-active.png"
border	= {3,3,1,3}
stretch	= TRUE
gap_side	= TOP
}
image
{
function	= EXTENSION
file		= "Tabs/tab-left-active.png"
border	= {3,1,3,3}
stretch	= TRUE
gap_side	= RIGHT
}
image
{
function	= EXTENSION
file		= "Tabs/tab-right-active.png"
border	= {1,3,3,3}
stretch	= TRUE
gap_side	= LEFT
}

image
{
function		= BOX_GAP
file			= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-top-left.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-top-right.png"
gap_end_border		= {0,1,1,0}
gap_side			= TOP
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-bottom-left.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-bottom-right.png"
gap_end_border		= {0,1,1,0}
gap_side			= BOTTOM
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-left-top.png"
gap_start_border	= {1,0,1,0}
gap_end_file		= "Tabs/gap-left-bottom.png"
gap_end_border		= {1,0,0,1}
gap_side			= LEFT
}
image
{
function			= BOX_GAP
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
gap_file		= "Tabs/gap-top-current.png"
gap_border		= {2,2,2,2}
gap_start_file		= "Tabs/gap-right-top.png"
gap_start_border	= {0,1,1,0}
gap_end_file		= "Tabs/gap-right-bottom.png"
gap_end_border		= {0,1,0,1}
gap_side			= RIGHT
}

# Notebook with no tabs
image
{
function			= BOX
file				= "Tabs/notebook.png"
border			= {1,1,1,1}
stretch			= TRUE
}
}
}

style "statusbar" = "default"{

	engine "pixmap" {

	}
}

style "comboboxentry" = "notebook_button" {
	xthickness = 3
	ythickness = 3
	
	engine "pixmap" {
		
	}
}

style "menubar"  = "default"
{

xthickness	= 1
ythickness	= 1
engine "pixmap"
{
image
{
function	= BOX
state 	= NORMAL
file		= "Menu-Menubar/menubar.png"
border	= {2,2,2,2}
stretch	= TRUE
}

image
{
function	= BOX
state 	= ACTIVE
file		= "Menu-Menubar/menubar.png"
border	= {2,2,2,2}
stretch	= TRUE
}

image
{
function	= BOX
state 	= INSENSITIVE
file		= "Menu-Menubar/menubar.png"
border	= {2,2,2,2}
stretch	= TRUE
}

image
{
function	= BOX
state 	= PRELIGHT
file		= "Menu-Menubar/menubar-item.png"
border	= {2,2,14,1}
stretch	= TRUE
}
}
}

style "toolbar" {

engine "pixmap"
{
image
{
function	= BOX
file		= "Toolbar/toolbar.png"
border	= {2,2,2,2}
stretch	= TRUE
}
}
}

style "toolbuttons" = "default"
{
xthickness = 1
ythickness = 1

GtkWidget::focus_padding = 2

engine "pixmap" {

image
{
function 	= BOX
state		= NORMAL
file		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= PRELIGHT
file 		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= ACTIVE
file 		= "Buttons/button-prelight.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= INSENSITIVE
file 		= "Buttons/button-normal.png"
border	= {2,2,2,2}
stretch 	= TRUE
}
}
}

style "toolbar-button" = "notebook_button" {
	engine "pixmap" {
	}
}


widget_class "*Tool*GtkToggleButton" style "toolbuttons"
widget_class "*Tool*GtkButton" style "toolbuttons"

style "menu" = "default" {
#bg_pixmap[NORMAL] = "Menu-Menubar/menu-overlay.png"
bg_pixmap[NORMAL] = "bg.png"
xthickness	= 1
ythickness	= 1

engine "pixmap"
{

image
{
function	= BOX
recolorable     = TRUE
detail	= "menu"
file		= "Menu-Menubar/menu.png"
border	= {22,2,2,2}
stretch	= TRUE
}
}
}

style "menu_item" = "menu" {
xthickness = 1
fg[PRELIGHT] = @selected_fg_color


engine "pixmap"
{
image
{
function		= BOX
file			= "Menu-Menubar/menubar-item-active.png"
border		= {2,2,2,2}
stretch		= TRUE
}
image
{
function		= ARROW
state			= NORMAL
overlay_file	= "Arrows/arrow-right.png"
overlay_stretch	= FALSE
arrow_direction	= RIGHT
}
image
{
function		= ARROW
state			= PRELIGHT
overlay_file	= "Arrows/arrow-right.png"
overlay_stretch	= FALSE
arrow_direction	= RIGHT
}
}
}

style "menubar_item" = "menu" {
xthickness		= 1
	fg[PRELIGHT] = @selected_fg_color


engine "pixmap"
{
image
{
function		= BOX
file			= "Menu-Menubar/menubar-item-active.png"
border		= {2,2,2,2}
stretch		= TRUE
}
image
{
function		= ARROW
state			= NORMAL
overlay_file	= "Arrows/arrow-right.png"
overlay_stretch	= FALSE
arrow_direction	= RIGHT
}
image
{
function		= ARROW
state			= PRELIGHT
overlay_file	= "Arrows/arrow-right.png"
overlay_stretch	= FALSE
arrow_direction	= RIGHT
}
}
}

style "scale_menu_item" = "scale" {
	GtkScale::slider-width = 21
	GtkScale::slider-length = 13


	engine "pixmap" {
	}
}

# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style "separator_menu_item" {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
	bg[NORMAL] = "#7D7D7D"
	engine "murrine" {
	}
}

style "separator_tool_item" {
	xthickness = 0
	ythickness = 1

	GtkVSeparator::vertical-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 7
	GtkWidget::separator-height = 1

        bg[NORMAL] = "#7D7D7D"

	engine "murrine" {
	}
}

style "frame_title" = "default"{

        text[NORMAL]= darker(@fg_color)
	fg[NORMAL] = lighter (@fg_color)
}

style "treeview" = "default"{

	engine "murrine"
	{
		roundness = 2
		lightborder_shade = 1.1
		gradient_shades = {1.04, 1.0, 1.0, 0.96}
	}
}

style "progressbar" = "default"{
	xthickness = 1
	ythickness = 1


	fg[PRELIGHT] = @selected_fg_color
	#bg[SELECTED] = "#cdcdcd"

engine "pixmap"
{
image
{
function		= BOX
detail		= "trough"
file			= "ProgressBar/trough-progressbar-horiz.png"
border		= {1,1,1,1}
stretch		= TRUE
}
image
{
function		= BOX
detail		= "bar"
file			= "ProgressBar/progressbar-horiz.png"
border		= {1,1,1,1}
stretch		= TRUE
}
}

}

style "progressbar_menu_item" = "progressbar" {


	engine "pixmap" {

	}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style "treeview_header" = "notebook_button" {
	xthickness = 2
	ythickness = 1

	engine "pixmap" {
	}
}

style "treeview_header_scrolled" = "treeview_header" {
}

style "scrolledwindow" {
	fg[NORMAL]= darker(@fg_color)
        text[NORMAL]= darker(@fg_color)
}

style "radiobutton"	= "default"
{
engine "pixmap"
{
image
{
function 		= OPTION
state 		= NORMAL
shadow 		= OUT
overlay_file 	= "Check-Radio/option1.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state			= PRELIGHT
shadow 		= OUT
overlay_file 	= "Check-Radio/option3.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state 		= ACTIVE
shadow 		= OUT
overlay_file 	= "Check-Radio/option1.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state 		= INSENSITIVE
shadow 		= OUT
overlay_file 	= "Check-Radio/option5.png"
overlay_stretch 	= FALSE
}

image
{
function 		= OPTION
state 		= NORMAL
shadow 		= IN
overlay_file 	= "Check-Radio/option2.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state 		= PRELIGHT
shadow 		= IN
overlay_file 	= "Check-Radio/option4.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state 		= ACTIVE
shadow 		= IN
overlay_file 	= "Check-Radio/option2.png"
overlay_stretch 	= FALSE
}
image
{
function 		= OPTION
state 		= INSENSITIVE
shadow 		= IN
overlay_file 	= "Check-Radio/option6.png"
overlay_stretch 	= FALSE
}

image
{
function 	= FLAT_BOX
stretch	= TRUE
file 		= "Others/null.png"
border 	= {0,0,0,0}
}
}
}

style "checkbutton"	= "default"
{
engine "pixmap"
{
image
{
function 		= CHECK
state 		= NORMAL
shadow 		= OUT
overlay_file 	= "Check-Radio/check1.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= PRELIGHT
shadow 		= OUT
overlay_file 	= "Check-Radio/check3.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= ACTIVE
shadow 		= OUT
overlay_file 	= "Check-Radio/check1.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= INSENSITIVE
shadow 		= OUT
overlay_file 	= "Check-Radio/check5.png"
overlay_stretch 	= FALSE
}

image
{
function 		= CHECK
state 		= NORMAL
shadow 		= IN
overlay_file 	= "Check-Radio/check2.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= PRELIGHT
shadow 		= IN
overlay_file 	= "Check-Radio/check4.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= ACTIVE
shadow 		= IN
overlay_file 	= "Check-Radio/check4.png"
overlay_stretch 	= FALSE
}
image
{
function 		= CHECK
state 		= INSENSITIVE
shadow 		= IN
overlay_file 	= "Check-Radio/check6.png"
overlay_stretch 	= FALSE
}

image
{
function 	= FLAT_BOX
stretch	= TRUE
file 		= "Others/null.png"
border 	= {2,2,2,2}
}
}
}

style "tooltips" {
	xthickness = 4
	ythickness = 4

	bg[NORMAL]        = @tooltip_bg_color
	fg[NORMAL]        = @tooltip_fg_color
	bg[SELECTED]      = "#000000"

	engine "murrine" {
		rgba = TRUE
	}
}

style "infobar" = "default" {

	engine "pixmap" {
	}
}

style "nautilus_location" {
	bg[NORMAL]  = mix (0.60, shade (1.05, @bg_color), @selected_bg_color)
}

style "calendar" {
	xthickness = 0
	ythickness = 0

	engine "murrine" {
		roundness = 0
	}
}

style "calendar_menu_item" = "calendar" {
	base[NORMAL] = "#605E58"
	base[ACTIVE] = "#4b4944"
}

style "iconview" = "default" {

	engine "murrine" {
		roundness = 6
		border_shades = {1.16, 1.0}
		glow_shade = 1.1
		glowstyle = 5
	}
}

style "soundfix" = "default"
{
}

style "list-header" = "default"
{

ythickness = 3
GtkTreeView::odd_row_color = "#121212"
GtkTreeView::even_row_color = "#202020"

engine "pixmap"
{
image
{
function 	= BOX
state		= NORMAL
file 		= "ListHeaders/list_header.png"
border 	= {1,2,1,2}
stretch 	= TRUE
}

image
{
function 	= BOX
state		= PRELIGHT
file 		= "ListHeaders/list_header-prelight.png"
border 	= {1,2,5,2}
stretch 	= TRUE
}

image
{
function 	= BOX
state		= ACTIVE
file		= "ListHeaders/list_header-pressed.png"
border 	= {0,0,0,0}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= SELECTED
file		= "ListHeaders/list_header-prelight.png"
border 	= {4,5,2,2}
stretch 	= TRUE
}
image
{
function 	= BOX
state		= INSENSITIVE
file		= "ListHeaders/list_header-insens.png"
border 	= {1,2,1,2}
stretch 	= TRUE
}
}
}

widget_class "*List" style "list-header"
widget_class "*GtkTree*" style "list-header"
widget_class "*GtkCList*" style "list-header"
# Wrokaround style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = "#99958b"
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {
	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the "New" button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style "evo_new_button_workaround" {
}

###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class "GtkWidget" style "default"

class "GtkSeparator" style "wide"
class "GtkFrame" style "wide"
class "GtkCalendar" style "wide"
class "GtkEntry" style "entry"
class "GtkOldEditable" style "entry"
class "GtkEditable" style "entry"
class "GtkSpinButton" style "spinbutton"
class "GtkRange" style "scale"
class "GtkScrollbar" style "scrollbar"
class "GtkHScrollbar" style "hscrollbar"
class "GtkVScrollbar" style "vscrollbar"
class "GtkCalendar" style "calendar"
class "GtkInfoBar" style "infobar"
class "GtkIconView" style "iconview"

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class "*<GtkNotebook>" style "notebook_bg"
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLabel>" style "notebook_bg"

widget_class "*<GtkToolbar>*" style "toolbar"
widget_class "*<GtkScrolledWindow>*" style "scrolledwindow"

widget_class "*<GtkButton>" style "button"
widget_class "*<GtkButton>*<GtkLabel>" style "button"
widget_class "*<GtkToolbar>.*.<GtkButton>*" style "notebook_button"
widget_class "*<GtkNotebook>" style "notebook"
widget_class "*<GtkStatusbar>" style "statusbar"
widget_class "*<GtkSpinButton>*" style "spinbutton"
widget_class "*<GtkNotebook>*<GtkButton>" style "notebook_button"
widget_class "*<GtkNotebook>*<GtkButton>*<GtkLabel>" style "notebook_button"
class "GtkRadioButton" 		style "radiobutton"
class "GtkRadioMenuItem" 	style "radiobutton"
class "GtkCheckButton" 		style "checkbutton"
class "GtkCheckMenuItem" 	style "checkbutton"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "comboboxentry"

widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu_item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator_menu_item"
widget_class "*<GtkSeparatorToolItem>*" style "separator_tool_item"
widget_class "*<GtkMenuBar>*<GtkMenuItem>*" style "menubar_item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame_title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgress>" style "progressbar"
widget_class "*<GtkMenuItem>.*.<GtkProgressBar>" style "progressbar_menu_item"
widget_class "*<GtkMenuItem>.*.<GtkScale>" style "scale_menu_item"
widget_class "*<GtkMenuItem>.*.<GtkCalendar>" style "calendar_menu_item"

# Treeview headers (and similar stock GTK+ widgets)
widget_class "*.<GtkScrolledWindow>*<GtkTreeView>*" style "treeview_header_scrolled"
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkTreeView>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>.*<GtkLabel>" style "treeview_header"

# Overlay scrollbar
widget_class "*<OsScrollbar>" style "overlay_scrollbar"
widget_class "*<OsThumb>" style "overlay_scrollbar"

# The window of the tooltip is called "gtk-tooltip"
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget "gtk-tooltip*" style "tooltips"

##########################################################################
# Following are special cases and workarounds for issues in applications.
##########################################################################

# Workaround for the evolution ETable (bug #527532)
widget_class "*.ETable.ECanvas" style "treeview_header"
# Workaround for the evolution ETree
widget_class "*.ETree.ECanvas" style "treeview_header"

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "nautilus_location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that this work around assumes that the combobox is _not_ in appears-as-list mode.
widget_class "*.<GtkComboBox>.<GtkCellView>" style "text_is_fg_color_workaround"
# This is the part of the workaround that fixes the menus
widget "*.gtk-combobox-popup-menu.*" style "menuitem_text_is_fg_color_workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
widget_class "*<GtkListItem>*" style "fg_is_text_color_workaround"
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class "*<GtkCList>" style "fg_is_text_color_workaround"
# Nautilus when renaming files, and maybe other places.
widget_class "*<EelEditableLabel>" style "fg_is_text_color_workaround"
# Work around for ubuntu's lucid sound indicator
widget "ido-offscreen-scale" style "soundfix"
# Thickness for indicator menu items
widget "*IdoEntryMenuItem*" style "wide"

# See the documentation of the style.
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo_new_button_workaround"

# Includes
include "apps/gnome-terminal.rc"
include "apps/nautilus.rc"
include "apps/chromium.rc"
